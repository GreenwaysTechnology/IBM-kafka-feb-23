steps:
1.docker compose

version: "3.7"
services:
  postgres:
    image: debezium/postgres:13
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=exampledb

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092

  debezium:
    image: debezium/connect:1.4
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on: [kafka]
    ports:
      - 8083:8083

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.3
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
    ports:
      - 8081:8081
    depends_on: [zookeeper, kafka]



C:\Users\sasub>docker exec -it 000e8c29abad /bin/sh
# psql -U docker -d exampledb -w
psql (13.10 (Debian 13.10-1.pgdg110+1))
Type "help" for help.

exampledb=#
exampledb=# exit
# psql -U docker -d exampledb -p
/usr/lib/postgresql/13/bin/psql: option requires an argument -- 'p'
Try "psql --help" for more information.
#  psql -U docker -d exampledb
psql (13.10 (Debian 13.10-1.pgdg110+1))
Type "help" for help.

exampledb=# help
You are using psql, the command-line interface to PostgreSQL.
Type:  \copyright for distribution terms
       \h for help with SQL commands
       \? for help with psql commands
       \g or terminate with semicolon to execute query
       \q to quit
exampledb=# CREATE TABLE student(id integer primary key, name varchar);
CREATE TABLE
exampledb=# SELECT * FROM student;
 id | name
----+------
(0 rows)

exampledb=# ALTER TABLE public.student REPLICA IDENTITY FULL;
ALTER TABLE
exampledb=#
C:\Users\sasub>docker exec -it 000e8c29abad /bin/sh
# psql -U docker -d exampledb -w
psql (13.10 (Debian 13.10-1.pgdg110+1))
Type "help" for help.

exampledb=#
exampledb=# exit
# psql -U docker -d exampledb -p
/usr/lib/postgresql/13/bin/psql: option requires an argument -- 'p'
Try "psql --help" for more information.
#  psql -U docker -d exampledb
psql (13.10 (Debian 13.10-1.pgdg110+1))
Type "help" for help.

exampledb=# help
You are using psql, the command-line interface to PostgreSQL.
Type:  \copyright for distribution terms
       \h for help with SQL commands
       \? for help with psql commands
       \g or terminate with semicolon to execute query
       \q to quit
exampledb=# CREATE TABLE student(id integer primary key, name varchar);
CREATE TABLE
exampledb=# SELECT * FROM student;
 id | name
----+------
(0 rows)

exampledb=# ALTER TABLE public.student REPLICA IDENTITY FULL;
ALTER TABLE
exampledb=#

....
debizum connector setup
E:\session\IBM\2023\Feb\kafka\postgres_debezium>curl -i -X POST -H "Accept:application/json" -H "Content-type:application/json" 127.0.0.1:8083/connectors/ --data "@debezium.json"
HTTP/1.1 201 Created
Date: Wed, 15 Feb 2023 02:33:26 GMT
Location: http://127.0.0.1:8083/connectors/exampledb-connector
Content-Type: application/json
Content-Length: 403
Server: Jetty(9.4.33.v20201020)

{"name":"exampledb-connector","config":{"connector.class":"io.debezium.connector.postgresql.PostgresConnector","plugin.name":"pgoutput","database.hostname":"postgres","database.port":"5432","database.user":"docker","database.password":"docker","database.dbname":"exampledb","database.server.name":"postgres","table.include.list":"public.student","name":"exampledb-connector"},"tasks":[],"type":"source"}
E:\session\IBM\2023\Feb\kafka\postgres_debezium>


docker run --tty --network  postgres_debezium_default confluentinc/cp-kafkacat kafkacat -b kafka:9092 -C -s key=s -s value=avro -r http://schema-registry:8081 -t postgres.public.student
% Reached end of topic postgres.public.student [0] at offset 0

db terminal
exampledb=# INSERT INTO public.student(id,name) VALUES(1,'bob');
INSERT 0 1
exampledb=# SELECT * FROM student;
 id | name
----+------
  1 | bob
(1 row)

E:\session\IBM\2023\Feb\kafka\postgres_debezium>docker run --tty --network  postgres_debezium_default confluentinc/cp-kafkacat kafkacat -b kafka:9092 -C -s key=s -s value=avro -r http://schema-registry:8081 -t postgres.public.student
% Reached end of topic postgres.public.student [0] at offset 0
{"before": null, "after": {"Value": {"id": 1, "name": {"string": "bob"}}}, "source": {"version": "1.4.2.Final", "connector": "postgresql", "name": "postgres", "ts_ms": 1676431529851, "snapshot": {"string": "false"}, "db": "exampledb", "schema": "public", "table": "student", "txId": {"long": 491}, "lsn": {"long": 23892672}, "xmin": null}, "op": "c", "ts_ms": {"long": 1676431530300}, "transaction": null}
% Reached end of topic postgres.public.student [0] at offset 1